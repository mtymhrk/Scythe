#!/usr/bin/ruby
# -*- coding:utf-8 -*-

MAKEIFLE = 'Makefile'

START_LINE = '# *** GENERATED BY GEN_FLYMAKE.RB START ***'
END_LINE   = '# *** GENERATED BY GEN_FLYMAKE.RB END *****'

$builddir = '.'

def exec_flymake_info(listsfile)
  File.open(listsfile) do |file|
    if file.readlines.find {|l|l =~ /#\s*<<FLYMAKE>>\s*:\s*([^\s]+)/ }
      $1
    else
      nil
    end
  end
end

def flags_file_path(info, dir)
  File.join(Dir.pwd, $builddir, dir, "CMakeFiles", "#{info}.dir", "flags.make")
end

def makefile_path(dir)
  File.join(dir, MAKEIFLE)
end

def delete_old_check_syntax_rule(makefile_path)
  return unless File.exist?(makefile_path)

  lines = File.open(makefile_path) {|f| f.readlines }
  File.open(makefile_path, 'w') do |file|
    lines.each do |line|
      l = line.chomp
      file.print(line) unless (l == START_LINE)..(l == END_LINE)
    end
  end
end

def insert_check_syntax_rule(include_path, makefile_path)
  File.open(makefile_path, 'a+') do |file|
    file.puts(START_LINE)
    file.puts("")
    file.puts("include #{include_path}")
    file.puts("")
    file.puts("check-syntax:")
    file.puts("\tgcc -fsyntax-only ${C_FLAGS} ${C_DEFINES} ${CHK_SOURCES}")
    file.puts("")
    file.puts(".PHONY: check-syntax");
    file.puts("")
    file.puts(END_LINE)
  end
end

if $0 == __FILE__
  if ARGV.length == 0
    $stderr.puts("#{$0}: error: too few arguments")
    $stderr.puts("Usage: #{$0} BUILD_DIR_NAME")
    exit 1
  end

  $builddir = ARGV[0]

  Dir['**/CMakeLists.txt'].each do |cmakelists|
    info = exec_flymake_info(cmakelists)
    if info
      dir = File.dirname(cmakelists)
      include_path = flags_file_path(info, dir)
      makefile_path = makefile_path(dir)

      delete_old_check_syntax_rule(makefile_path)
      insert_check_syntax_rule(include_path, makefile_path)
    end
  end
end
